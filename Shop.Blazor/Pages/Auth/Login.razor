@page "/login"
@using Shop.Common.Models.DTO.Auth
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>

<EditForm Model="loginRequest" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="loginRequest.Email" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginRequest.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (loginError != null)
{
    <div class="alert alert-danger">
        @loginError
    </div>
}

@code {
    private LoginRequestDto loginRequest = new LoginRequestDto();
    private string loginError;

    private async Task HandleLogin()
    {
        try
        {
            var response = await AuthService.LoginAsync(loginRequest);

            NavigationManager.NavigateTo("/");

        }
        catch (Exception ex)
        {
            loginError = $"An error occurred: {ex.Message}";
        }
    }
}
